;Selectcase básico
operation calculadora
	params ;Parâmetros de entrada e saída 
		;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
		numeric pNrPrimeiro  : IN
		numeric pNrSegundo   : IN
		string  pStrOperacao : IN
		numeric pNrResultado : OUT
	endParams

	;Abertura select case
	selectcase "soma"
		case "soma"
			pResultado = pNum1 + pNum2
		case "subtracao"
			pResultado = pNum1 - pNum2
		case "divisao"
			pResultado = pNum1 / pNum2
		case "multiplicacao"
			pResultado = pNum1 * pNum2
		elseCase
			pResultado = 0
	endselectcase


	return(0)
end

;Selectcase basico
operation validaCampo
	params ;Parâmetros de entrada e saída 
		;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
		String pNome : IN
		String pMensagem : OUT
	endParams

	selectcase pNome
		case ""
			pMensagem = "Campo nome é obrigatório."

			return(<g_erroexec>)
		elseCase
			pMensagem = "Campo preenchido corretamente."
			return(0)
	endselectcase

end

;Selectcase com validações numéricas
operation verificaIdade
	params  ;Parâmetros de entrada e saída 
		;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
		Numeric pIdade : IN
		String pCategoria : OUT
	endParams

	selectcase pIdade
		case < 13
			pCategoria = "Criança"
		case < 18
			pCategoria = "Adolescente"
		case < 60
			pCategoria = "Adulto"
		elseCase
			pCategoria = "Idoso"
	endselectcase

	return(0)
end

;Selectcase com validações numéricas e retorno de dados consultados
entry plBuscaAgronomo
    params  ;Parâmetros de entrada e saída 
        ;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
    numeric p_tp_agronomo : IN
    numeric p_cd_agronomo : IN
    string  p_nm_agronomo : OUT
    endparams

   ;Abertura do selectcase
   selectcase p_tp_agronomo
      case 4
		;Consulta dos dados e retorno 
         clear/e "gpes_fornecedor_v"
         cd_fornecedor.gpes_fornecedor_v/init = p_cd_agronomo
         retrieve/e "gpes_fornecedor_v"
         if ($status < 0)
            call PL_ERRO_TRIGGER
            return(<G_ERROEXEC>)   
         endif   
         p_nm_agronomo = nm_pessoa.gpes_fornecedor_v
      case 7   
		 ;Consulta dos dados e retorno
         clear/e "gpes_agrocoamo_v"
         cd_agronomo.gpes_agrocoamo_v/init = p_cd_agronomo
         retrieve/e "gpes_agrocoamo_v" 
         if ($status < 0)
            call PL_ERRO_TRIGGER
            return(<G_ERROEXEC>)   
         endif   
         p_nm_agronomo = nm_pessoa.gpes_agrocoamo_v
   endselectcase
   return(0) ;Retorno com sucesso
end

;Selectcase com validações de string
entry plCredenciaisFila
	params ;Parâmetros de entrada e saída 
		;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
		string pNomeFila      :IN
		struct pStcCredencial : OUT
	endparams
	variables ;Variáveis da Local Proc
		string  vFila, vNamespace
		numeric vNrFila
	endvariables

	;Switch/Case para aplicação da regra de retorno
	selectcase pNomeFila
		case "municipio"
			vFila = "sbq-municipio"
		case "uf"
			vFila = "sbq-uf"
		case "pais"
			vFila = "sbq-pais"
		case "transportadora"
			vFila = "sbq-transportadora"
		case "oportunidade"
			vFila = "sbq-oportunidade"
		case "tipo-veiculo"
			vFila = "sbq-tipo-veiculo"
		case "tipo-carroceria"
			vFila = "sbq-tipo-carroceria"
		case "faixa-comprimento"
			vFila = "sbq-faixa-comprimento"
		case "espacamento-eixos"
			vFila = "sbq-espacamento-eixos"
		case "vinculo-ordem-carregamento"
			vFila = "sbq-vinculo-ordem-carregamento"
		case "vinculo-portaria"
			vFila = "sbq-vinculo-portaria"
		case "veiculo-frota-safra"
			vFila = "sbq-veiculo-frota-safra"
		case "restricao-veiculo-local"
			vFila = "sbq-restricao-veiculo-local"
		case "vinculo-nota"
			vFila = "sbq-vinculo-nota"
		case "reserva-intencao-logs"
			vFila = "sbq-reserva-intencao-logs"
		case "modalidade-contrato"
			vFila = "sbq-modalidade-contrato"
		case "integracao-tipo-cvc"
			vFila = "sbq-integracao-tipo-cvc"
		elsecase
			vFila = ""
	endselectcase ; Finalização do Switch/Case

	;Chamda de outra Local Proc para complemento da execução
	call plBuscaFilaExecucao(vNrFila, $t_ds_erro$)

	;Condicional if para completar o dado de retorno
	if (vNrFila = 1 & <NOME_DATABASE> = "PRODUÇÃO") ;Produção 
		vNamespace = "sbns-coft-prd"
	elseif (vNrFila = 2) ;Homologação
		vNamespace = "sbns-coft-stg"
	elseif (vNrFila = 3) ;Desenvolvimento
		vNamespace = "sbns-coft-dev"
	endif

	;Tratamemnto de eror das chamadas executadas acima
	if(vFila = "" | vNamespace = "")
		$t_ds_erro$ = "Ocorreu um erro ao obter as credenciais da fila."
		return(<G_ERROEXEC>) ;Retorno de erro da Local Proc
	endIf

	;Tratamento dos resultados para retorno em Struct
	pStcCredencial = $newstruct
	pStcCredencial->namespace = vNamespace
	pStcCredencial->fila = vFila

	return (0) ;Retorna a Local Proc com sucesso
end 

;Selectcase com uso de struct para retorno
entry plDefinirTipoClassifica
	params ;Parâmetros de entrada e saída 
		;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
		struct p_stc_veiculo 		:IN
		struct p_stc_hitCompveic	:INOUT
		numeric p_nr_ordem 			:IN
	endparams
	variables ;Definição de variáveis
		string v_ds_contexto, v_nr_placa_reboque01, v_nr_placa_reboque02, v_nr_placa_dolly
		numeric v_nr_ordem
	endvariables

	;Preparação para retorno de erros
	v_ds_contexto = "%%^%%%(<$componentname>, pl_definir_tp_classifica)"

	;Atribuição dos valores de struc para variáveis
	v_nr_placa_reboque01 = p_stc_hitCompveic->OCC{2}->NR_PLACA
	v_nr_placa_reboque02 = p_stc_hitCompveic->OCC{3}->NR_PLACA
	v_nr_placa_dolly     = p_stc_hitCompveic->OCC{4}->NR_PLACA

	;Abertura selectcase
	selectcase p_nr_ordem
		case 1
			p_stc_hitCompveic->OCC{p_nr_ordem}->TP_CLASSIFICA  =  3
			if (v_nr_placa_reboque01 != "" | v_nr_placa_reboque02 != "" | v_nr_placa_dolly != "")
				p_stc_hitCompveic->OCC{p_nr_ordem}->TP_CLASSIFICA  =  6
			endif
		case 4  
			p_stc_hitCompveic->OCC{p_nr_ordem}->TP_CLASSIFICA  = 14
		case 2, 3 
			p_stc_hitCompveic->OCC{p_nr_ordem}->TP_CLASSIFICA  = 11
	endselectcase

	return(0)
end

;Selectcase com uso de struct para retorno
entry plDefinirEixos
	params ;Parâmetros de entrada e saída 
		;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
		struct p_stc_veiculo		:IN
		struct p_stc_hitCompveic	:INOUT
	endparams
	variables
		string v_ds_contexto
		numeric v_tp_classifica, v_qt_eixo_total, v_qt_eixo_tracao, v_qt_eixo_reboque, v_cd_tpveiculo
	endvariables

	v_ds_contexto = "%%^%%%(<$componentname>, pl_definir_qt_eixos)"
	
	v_cd_tpveiculo = p_stc_veiculo->OCC{1}->CD_TPVEICULO

	;Abertura do Selectcase
	selectcase v_cd_tpveiculo

		case 1 ;TRUCK
			p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = 3

		case 2, 5, 21 ;TOCO | AUTOMÓVEL | CAMINHÃO MÉDIO 3/4
			p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = 2

		case 16, 22 ;BI-TREM | RODOTREM SEM DOLLY
			if (p_stc_veiculo->OCC{1}->QT_EIXOTOTAL = 6)
				p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = 2
				p_stc_hitCompveic->OCC{2}->QT_EIXOTOTAL = 2
				p_stc_hitCompveic->OCC{3}->QT_EIXOTOTAL = 2	

			elseif (p_stc_veiculo->OCC{1}->QT_EIXOTOTAL = 7)
				p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = 3
				p_stc_hitCompveic->OCC{2}->QT_EIXOTOTAL = 2
				p_stc_hitCompveic->OCC{3}->QT_EIXOTOTAL = 2	

			elseif (p_stc_veiculo->OCC{1}->QT_EIXOTOTAL = 8)
				p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = 3
				p_stc_hitCompveic->OCC{2}->QT_EIXOTOTAL = 2
				p_stc_hitCompveic->OCC{3}->QT_EIXOTOTAL = 3

			elseif (p_stc_veiculo->OCC{1}->QT_EIXOTOTAL = 9)
				p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = 3
				p_stc_hitCompveic->OCC{2}->QT_EIXOTOTAL = 3
				p_stc_hitCompveic->OCC{3}->QT_EIXOTOTAL = 3
			endif

		case 34 ;RODOTREM COM DOLLY
			if (p_stc_veiculo->OCC{1}->QT_EIXOTOTAL = 9)
				p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = 3
				p_stc_hitCompveic->OCC{2}->QT_EIXOTOTAL = 2
				p_stc_hitCompveic->OCC{3}->QT_EIXOTOTAL = 2
				p_stc_hitCompveic->OCC{4}->QT_EIXOTOTAL = 2

			elseif (p_stc_veiculo->OCC{1}->QT_EIXOTOTAL = 11)
				p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = 3
				p_stc_hitCompveic->OCC{2}->QT_EIXOTOTAL = 3
				p_stc_hitCompveic->OCC{3}->QT_EIXOTOTAL = 3
				v_qt_eixo_total = p_stc_veiculo->OCC{1}->QT_EIXOTOTAL
				v_qt_eixo_reboque = v_qt_eixo_total - 9
				p_stc_hitCompveic->OCC{4}->QT_EIXOTOTAL = v_qt_eixo_reboque
			endif

		case 3	; CARRETA
			if (p_stc_veiculo->OCC{1}->QT_EIXOTOTAL = 4 | p_stc_veiculo->OCC{1}->QT_EIXOTOTAL = 5)
				p_stc_hitCompveic->OCC{2}->QT_EIXOTOTAL = 2
			else
				p_stc_hitCompveic->OCC{2}->QT_EIXOTOTAL = 3
			endif
			v_qt_eixo_reboque = p_stc_hitCompveic->OCC{2}->QT_EIXOTOTAL
			v_qt_eixo_total = p_stc_veiculo->OCC{1}->QT_EIXOTOTAL
			v_qt_eixo_tracao = v_qt_eixo_total - v_qt_eixo_reboque
			p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = v_qt_eixo_tracao

		case 26 ;BI-TRUCK
			p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = 4

		elsecase
			p_stc_hitCompveic->OCC{1}->QT_EIXOTOTAL = p_stc_veiculo->OCC{1}->QT_EIXOTOTAL

		endselectcase

	return(0) ;Retorno da operação com sucesso
end

;Selectcase para chamda de outras operaçoes
entry plExibeListaGrupo
	params  ;Parâmetros de entrada e saída 
		;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
		numeric p_tp_local   : in
		numeric p_tp_cadprod : in
		numeric p_cd_local   : out
	endparams    
	variables
		string v_ds_contexto 
	endvariables

	;Preparação de variáveis para tratamento de erros
	v_ds_contexto = "(<$componentname>.pl_exibe_lst_grupo)"

	if (p_tp_local = "") ; Validação de dados obrigatórios
		$t_ds_erro$ = $concat("Módulo é obrigatório. ", v_ds_contexto)
		return (<g_erroexec>)
	endif

	;Abertura selectcase
	selectcase p_tp_cadprod
		case 1
			Activate "CTRAO200".EXIBE_LST_PRODUTO(p_tp_local, "", p_cd_local, $t_ds_erro$)
		case 2
			activate "ctrao200".exibe_lst_grupo(p_tp_local, p_cd_local, $t_ds_erro$)        
		elsecase
	endselectcase	

	;Validação de erros
	if ($status < 0)
		if ($status != <g_erroexec>)
			call pl_erro_cmdmsg($procerrorcontext)
		endif
		$t_ds_erro$ = $concat($t_ds_erro$, v_ds_contexto)
		return (<g_erroexec>)
	endif

	return(0);Retorno com sucesso
end

;Selectcase para tratamento de erros com struct
entry plErroWeb
	params  ;Parâmetros de entrada e saída 
		;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
		numeric pCdErro     : in
		string  pDsErro     : in
		struct  pStcOutErro : out
	endparams

	pStcOutErro = $newstruct

	;Abertura select case
	selectcase pCdErro
		case -201
			pStcOutErro->cdErro = pCdErro*-1
			pStcOutErro->dsErro = pDsErro
		case -403
			pStcOutErro->cdErro = pCdErro*-1
			pStcOutErro->dsErro = pDsErro
		elsecase 
			pStcOutErro->cdErro = 201
			pStcOutErro->dsErro = pDsErro
	endselectcase

	return(0) ;Tratamento do retorno
end; 

;Selectcase com retorno de string
entry plDiaDaSemana
	params ;Parâmetros de entrada e saída 
		;Tipo parâmetro - NomeParâmetro - Definição de entrada ou saída
		date pDtData :in
		boolean pInAbrev :in
		string pDsSemana :out
	endparams
	variables
		numeric pNrData
	endvariables
	
	pNrData = pDtData[#A]

	;Abertura selectcase
	selectcase(pNrData)
		case 1 ;segunda
			if(pInAbrev)
				pDsSemana = " Seg"
			else
				pDsSemana = "Segunda"
			endif
		case 2 ;terça
			if(pInAbrev)
				pDsSemana = " Ter"
			else
				pDsSemana = "Terça"
			endif
		case 3 ;quarta
			if(pInAbrev)
				pDsSemana = " Qua"
			else
				pDsSemana = "Quarta"
			endif
		case 4 ;quinta
			if(pInAbrev)
				pDsSemana = " Qui"
			else
				pDsSemana = "Quinta"
			endif
		case 5 ;sexta
			if(pInAbrev)
				pDsSemana = " Sex"
			else
				pDsSemana = "Sexta"
			endif
		case 6 ;sábado
			if(pInAbrev)
				pDsSemana = " Sáb"
			else
				pDsSemana = "Sábado"
			endif
		case 7 ;domingo
			if(pInAbrev)
				pDsSemana = " Dom"
			else
				pDsSemana = "Domingo"
			endif
		elsecase ; Se vier vazio.
			;tratamento do erro
			$t_ds_erro$    = "Dia da semana não encontrado para: %%pDtData%%%"
			return <g_erroexec>
	endselectcase

	return(0) ;Retorno com sucesso
end
