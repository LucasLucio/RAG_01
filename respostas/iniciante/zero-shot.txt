================= PROMPT =================
   Em Uniface utilizando ProcScript como linguagem de programação, crie uma operation que valide um CPF. 
   Deve receber uma string como parâmetro de entrada contendo o CPF sem formatação e é necessário que a operação retorne um booleano indicando se é um CPF válido. 
   Sendo os valores possíveis, verdadeiro para um CPF válido e falso para um inválido.

   As regras de validação de um CPF são as descritas abaixo:

   Para se validar um CPF se calcula o primeiro dígito verificador a partir dos 9 primeiros dígitos do CPF.
   Em seguida, calcula o segundo dígito verificador a partir dos 10 primeiros dígitos do CPF incluindo o primeiro dígito, obtido na primeira parte.

   Como calcular o primeiro dígito:

      Separar os primeiros 9 dígitos do CPF e multiplicar cada um dos números, 
      desde o primeiro até o nono número, inciar a multiplicação do primeiro em 10 e decrescer em 1 o multiplicador a cada dígito seguinte. 
      Somar todos os resultados obtidos nas multiplicações e dividir por 11 e considerar como quociente apenas o valor inteiro.
      Considere o resto da divisão para obter o resultado do dígito. 
         - Se for menor que 2, então o dígito é igual a 0 (Zero).
         - Se for maior ou igual a 2, então o dígito é igual a 11 menos o próprio resto da divisão.

   Como calcular o segundo dígito:

   Para  calcular o segundo dígito vamos usar o primeiro digito já calculado. 
   Vamos montar a mesma tabela de multiplicação usada no cálculo do primeiro dígito. 
   Só que desta vez usaremos na segunda linha os valores 11,10,9,8,7,6,5,4,3,2 já que estamos incluindo mais um digito no cálculo(o primeiro dígito calculado):

      O calculo é semelhante ao do primeiro dígito, a diferença neste caso é que são 10 dígitos a serem multiplicados, incluindo o primeiro verificador. 
      Para multiplicar se inicia em 11 como multiplicador do primeiro número e segue decrescendo até o décimo número. 
      Somar todos os resultados obtidos nas multiplicações e dividir por 11 e considerar como quociente apenas o valor inteiro.
      Considere o resto da divisão para obter o resultado do dígito. 
         - Se for menor que 2, então o dígito é igual a 0 (Zero).
         - Se for maior ou igual a 2, então o dígito é igual a 11 menos o próprio resto da divisão.

   após obter os dois últimos dígitos é necessário verificar se eles são iguais ao informado no CPF de entrada.


================= RESPOSTA  =================
```
OPERACAO validar_cpf
  IN string cpf_sem_formatacao
  OUT boolean cpf_válido

  // Separa os primeiros 9 dígitos do CPF
  integer primeiro_nove_digitos = substring(cpf_sem_formatacao, 1, 9)

  // Calcula o primeiro dígito verificador
  integer multiplicador = 10
  integer soma_multiplicacoes = 0
  for i = 1 to 9
    integer digito_atual = int(substring(primeiro_nove_digitos, i, 1))
    soma_multiplicacoes = soma_multiplicacoes + (digito_atual * multiplicador)
    multiplicador = decrementar_multiplicador(multiplicador)
  endfor

  integer quociente_primeiro_digito = ceil(soma_multiplicacoes / 11)
  integer resto_primeiro_digito = modulo(soma_multiplicacoes, 11)

  if (resto_primeiro_digito < 2) then
    primeiro_digito_verificador = 0
  else
    primeiro_digito_verificador = 11 - resto_primeiro_digito
  endif

  // Calcula o segundo dígito verificador
  integer multiplicador_segundo_digito = 11
  integer soma_multiplicacoes_segundo_digito = 0
  for i = 1 to 10
    integer digito_atual = int(substring(cpf_sem_formatacao, i, 1))
    if (i = 1) then
      // Inclui o primeiro dígito verificador no cálculo do segundo dígito
      digito_atual = int(substring(cpf_sem_formatacao, 10, 1)) * multiplicador_segundo_digito
    endif
    soma_multiplicacoes_segundo_digito = soma_multiplicacoes_segundo_digito + digito_atual
    multiplicador_segundo_digito = decrementar_multiplicador(multiplicador_segundo_digito)
  endfor

  integer quociente_segundo_digito = ceil(soma_multiplicacoes_segundo_digito / 11)
  integer resto_segundo_digito = modulo(soma_multiplicacoes_segundo_digito, 11)

  if (resto_segundo_digito < 2) then
    segundo_digito_verificador = 0
  else
    segundo_digito_verificador = 11 - resto_segundo_digito
  endif

  // Verifica se os dois últimos dígitos do CPF são iguais ao informado na entrada
  if (substring(cpf_sem_formatacao, len(cpf_sem_formatacao) - 1, 2) = str(ultimo_digito_verificador)) then
    cpf_válido = .T.
  else
    cpf_válido = .F.
  endif

END OPERACAO
```
Este código define uma operação chamada `validar_cpf` que recebe um CPF como entrada e retorna um valor lógico indicando se o CPF é válido ou não.

A operação começa separando os primeiros 9 dígitos do CPF e calcula o primeiro dígito verificador utilizando a fórmula descrita no problema. Em seguida, calcula o 
segundo dígito verificador incluindo o primeiro dígito verificado no cálculo.

Finalmente, verifica se os dois últimos dígitos do CPF são iguais ao informado na entrada e retorna um valor lógico indicando se o CPF é válido ou não.