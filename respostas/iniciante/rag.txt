================= PROMPT =================
   Em Uniface utilizando ProcScript como linguagem de programação, crie uma operação que valide um CPF. 
   Deve receber uma string como parâmetro de entrada contendo o CPF sem formatação e é necessário que a operação retorne um booleano indicando se é um CPF válido. 
   Sendo os valores possíveis, verdadeiro para um CPF válido e falso para um inválido.

   As regras de validação de um CPF são as descritas abaixo:

   Para se validar um CPF se calcula o primeiro dígito verificador a partir dos 9 primeiros dígitos do CPF.
   Em seguida, calcula o segundo dígito verificador a partir dos 10 primeiros dígitos do CPF incluindo o primeiro dígito, obtido na primeira parte.

   Como calcular o primeiro dígito:

      Separar os primeiros 9 dígitos do CPF e multiplicar cada um dos números, 
      desde o primeiro até o nono número, inciar a multiplicação do primeiro em 10 e decrescer em 1 o multiplicador a cada dígito seguinte. 
      Somar todos os resultados obtidos nas multiplicações e dividir por 11 e considerar como quociente apenas o valor inteiro.
      Considere o resto da divisão para obter o resultado do dígito. 
         - Se for menor que 2, então o dígito é igual a 0 (Zero).
         - Se for maior ou igual a 2, então o dígito é igual a 11 menos o próprio resto da divisão.

   Como calcular o segundo dígito:

   Para  calcular o segundo dígito vamos usar o primeiro digito já calculado. 
   Vamos montar a mesma tabela de multiplicação usada no cálculo do primeiro dígito. 
   Só que desta vez usaremos na segunda linha os valores 11,10,9,8,7,6,5,4,3,2 já que estamos incluindo mais um digito no cálculo(o primeiro dígito calculado):

      O calculo é semelhante ao do primeiro dígito, a diferença neste caso é que são 10 dígitos a serem multiplicados, incluindo o primeiro verificador. 
      Para multiplicar se inicia em 11 como multiplicador do primeiro número e segue decrescendo até o décimo número. 
      Somar todos os resultados obtidos nas multiplicações e dividir por 11 e considerar como quociente apenas o valor inteiro.
      Considere o resto da divisão para obter o resultado do dígito. 
         - Se for menor que 2, então o dígito é igual a 0 (Zero).
         - Se for maior ou igual a 2, então o dígito é igual a 11 menos o próprio resto da divisão.

   após obter os dois últimos dígitos é necessário verificar se eles são iguais ao informado no CPF de entrada.


================= RESPOSTA  =================
   Aqui está um exemplo de código em ProcScript para validar um CPF:
   ```
   operation ValidateCPF()
   param cpf : datetime
   var valid : boolean
   
   // Verificar se o CPF tem 11 caracteres
   if length(cpf) != 11 then
      message "CPF inválido: precisa ter 11 caracteres"
      return (-1)
   
   // Remover pontuação do CPF
   var cpfWithoutPunctuation = substring(cpf, 1, length(cpf)) replace({['./-']}, "")
   
   // Verificar se o CPF tem apenas números e não tem espaços em branco
   if not match(cpfWithoutPunctuation, '^[0-9]+$') then
      message "CPF inválido: precisa ter apenas números"
      return (-1)
   
   // Calcular o primeiro dígito (DV1)
   var dv1 = sum(int(substring(cpfWithoutPunctuation, 1, 9)) * {1,3,5,7}) mod 11
   
   // Verificar se DV1 é igual a 0 ou 10
   if dv1 == 0 or dv1 == 10 then
      dv1 = 0
   else
      dv1 = (12 - dv1) mod 11
   
   // Calcular o segundo dígito (DV2)
   var dv2 = sum(int(substring(cpfWithoutPunctuation, 1, 10)) * {1,3,5,7,9}) + dv1
   dv2 = (dv2 * 10) mod 11
   
   // Verificar se DV2 é igual a 0 ou 10
   if dv2 == 0 or dv2 == 10 then
      dv2 = 0
   else
      dv2 = (12 - dv2) mod 11
   
   // Verificar se o CPF válida
   if int(substring(cpfWithoutPunctuation, 10)) != dv1 and int(substring(cpfWithoutPunctuation, 11)) != dv2 then
      message "CPF inválido"
   else
      valid = true
   
   return (valid)
   end operation ValidateCPF()
   ```
   Este código define uma operação chamada `ValidateCPF` que recebe um parâmetro `cpf` do tipo `datetime`. Ele remove a pontuação do CPF, verifica se o CPF tem apenas números e não tem espaços em branco. Em seguida, ele calcula os dois dígitos verificadores (DV1 e DV2) usando as regras de validação do CPF brasileiro.

   Por fim, o código verifica se o CPF é válido comparando-se com os valores calculados para os dígitos verificadores. Se o CPF for válido, a variável `valid` será verdadeira (`true`). Caso contrário, o CPF será considerado inválido e a variável `valid` será falsa (`false`).

   Para usar essa operação em seu aplicativo Uniface, você precisará declará-la como pública no arquivo de configuração do aplicativo (por exemplo, no arquivo `uniface.cfg`). Além disso, você precisará chamar a operação passando o CPF a ser validado como parâmetro. Por exemplo:
   ```
   operation myOperation()
   ...
   
   var cpf = "12345678910"
   if ValidateCPF(cpf) then
      message "CPF válido!"
   else
      message "CPF inválido!"
   end
   
   end operation myOperation()
   ```